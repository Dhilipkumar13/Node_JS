Node JS:
  Node js is javascript runtime environment build on the chrome v8 Javascript engine
chrome - V8
firefox - spider monkey
safari - javascript core
microsoft - chakra

  *** Node is program that include JavaScript V8 engine with some module that give us capability which is not available in browser ***
  *** we can access file system, network and some other properties ***

How it works?
  node js handle multple request using thread.
  *** node is "asyncronus" which handle multiple request with limited thread ***
  node continuesly monitor Event queue because database prepared query it put notification in event queue then thread pass information to client.

Important Node modules?
  * http
  * os
  * file
  * event
  *  path
  * process
  * query String
  * Stream

Global Object?
  * console -> console.log(),console.error()
  * setTimeout, setInterval, setImmediate, clearTimeout, clearInterval, clearImmediate
    setInterval - it is call function in certain interval,
                  *** it called continously untile clearInterval or windows closed
  * __dirname
  * __filename

  "In browser " all function and variable can be access by windows object 
    basically all fuction while call with prefix window object
    likely
    ***  console.log() -->>  window.console.log()
          setTimeout() -->>  window.setTimeout()
  "In node " we cannot access variable and function globally
   ***  console.log() -->>  global.console.log()
        setTimeout() -->>  global.setTimeout()

  *** most of time we use const for require we dont want to override this variable ***

Important topics to know:
  NPM
  Asyncronous Operation
  CRUD operation
  Data Validation
  Authentication and Authorization using json web token
  Handling and logging Error
  Unit and Integration Test
  Test Driven Development
  Deployment the application in cloud

Modules:
Path modules  
    const path = required("path")

    parse()  -> { root:'/',
                  dir: ,
                  base: , 
                  ext: ,
                  name:   }
OS modules
  const os = required("os")

  freemem() -> return total free memory in meachine
  totalmem() -> return total memory in mechine
  userInfo() -> return current user

EventEmitter
  const EventEmitter = required("event")
  *** this EventEmitter is class not an object like other modules
  we need to create object for method to use
  const event = new EventEmitter();
  ** Mostly used method in event
      * event.emit('messageloged')
      * event.on() or event.eventListener()

        event.on('messageloged',function(){
          console.log('event emited')
        })
        event.emit('eventEmited');

Eventargument
      event argument is by passing the argument to event 
      while we emit the event pass the argument 

      pass multiple value in object
      * event.emit('messageloged',{id:1,url:'https://'})
      * event.on('messageloged',(arg)=>{
          console.log("event Emitted"+arg)
        })

  *** but in above eventargument we only use eventListener in that file only 
  to overcome this we need extending event emitter

EventEmitter
     # logger.js

        const EventEmitter = require('event')
        
        class Logger extend EventEmitter{
          log(message){
        console.log(message)
        
        this.emit('messageLogged',{id:1,url:'https://'})
        }
        }
        module.export = Logger ;
        
     # app.js
        
        const EventEmitter = require('event')
        
        const Logger = requied('./logger')
        const logger = new Logger();      
        
        logger.on('messageLogged',(arg)=>{
          consolr.log('Listened called',arg)
        })
        logger.log('message')
    
HTTP Modules

const http = require('http')

const server = http.createServer((req,res)=>{
if(req === '/'){
  res.write('Hello World!')
  res.end()
}
if(req === '/api/contact'){
  res.write(JSON.stringify([1,2,3]))
  res.end()
}
})
server.listen(3000)

console.log("port Listening...")
